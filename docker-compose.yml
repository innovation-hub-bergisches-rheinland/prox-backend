version: "3.7"

services:
  db:
    image: postgres:15.1-alpine
    ports:
      - "5432:5432"
    volumes:
      - prox-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=prox-backend
      - POSTGRES_PASSWORD=prox-backend
      - POSTGRES_DB=prox-db
      - PGDATA=/var/lib/postgresql/data/pgdata
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - ./src/main/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
  localstack:
    image: localstack/localstack:1.3.0
    environment:
      SERVICES: S3
      START_WEB: 0
      DEFAULT_REGION: eu-central-1
    ports:
      - "4566:4566"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# TODO: It is not really a good idea to setup keycloak locally as Keycloak has very poor support
#       for configuration as code and realm importing at startup. Although it is possible, we should
#       rather consider a staging environment.

#  keycloak-db:
#    image: postgres:13.2-alpine
#    restart: unless-stopped
#    environment:
#      POSTGRES_DB: keycloak-db
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: keycloak
#    volumes:
#      - keycloak-db-data:/var/lib/postgresql/data
#
#  keycloak:
#    depends_on:
#      - keycloak-db
#    container_name: keycloak
#    ports:
#      - "8081:8080"
#    command:
#      - start-dev
#      - --import-realm
#    volumes:
#      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json
#    environment:
#      DB_VENDOR: postgres
#      DB_ADDR: keycloak-db
#      DB_DATABASE: keycloak-db
#      DB_USER: keycloak
#      DB_PASSWORD: keycloak
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    image: quay.io/keycloak/keycloak:latest
#    restart: unless-stopped

volumes:
  prox-db-data: {}
  keycloak-db-data: {}