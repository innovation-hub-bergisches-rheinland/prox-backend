name: CI

on:
  # Run on every pull request
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ main ]

env:
  JAVA_VERSION: 17

# Will build the binaries, run tests and checks on them and if everything succeeds AND it is a push
# to the main branch will build and deploy a snapshot release of the binaries
jobs:
  # Basic Gradle wrapper validation. This step is run first, due to security
  # concerns. Running our whole pipeline with Gradle with a corrupt wrapper,
  # could expose our secrets, and we definitely want to prevent this.
  validation:
    name: Gradle wrapper validation

    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

  assemble:
    name: Build

    runs-on: ubuntu-latest
    needs: [ validation ]

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: 'gradle'

      - name: Gradle Assemble
        run: |
          ./gradlew --stacktrace assemble --no-daemon

  test:

    runs-on: ubuntu-latest
    needs: [ validation ]

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: 'gradle'

      - name: Gradle test
        run: |
          ./gradlew --stacktrace test --no-daemon

      - name: Upload Test Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build reports
          path: build/reports

  build-image:
    name: Build Docker Image

    runs-on: ubuntu-latest
    needs: [ assemble, test ]

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: 'gradle'

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_USERNAME }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}

      - name: Build Rolling Docker Image
        run: ./gradlew jib --no-daemon -x test